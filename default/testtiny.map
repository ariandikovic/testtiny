Archive member included because of file (symbol)

c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o (exit)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_clear_bss.o)
                              testtiny.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

scratch             0xc               testtiny.o
flag                0x1               testtiny.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
LOAD testtiny.o
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25\libc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x79e
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0x8 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000002e       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_clear_bss.o)
                0x0000002e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000003e        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x00000042        0x2 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
                0x00000042                __vector_12
                0x00000042                __bad_interrupt
                0x00000042                __vector_6
                0x00000042                __vector_3
                0x00000042                __vector_11
                0x00000042                __vector_13
                0x00000042                __vector_17
                0x00000042                __vector_7
                0x00000042                __vector_5
                0x00000042                __vector_4
                0x00000042                __vector_9
                0x00000042                __vector_2
                0x00000042                __vector_15
                0x00000042                __vector_8
                0x00000042                __vector_14
                0x00000042                __vector_10
                0x00000042                __vector_16
                0x00000042                __vector_18
 .text          0x00000044      0x756 testtiny.o
                0x0000054a                __vector_1
                0x00000044                usartHEXmyoutput
                0x00000090                usartSendstring
                0x0000014c                usartFillbuffer
                0x0000007e                usartPutCRLF
                0x000000e8                spiRead
                0x0000010e                usartSendDump
                0x0000018a                setParam
                0x000003be                parseBuffer
                0x000000c4                spiWrite
                0x000000aa                getDIPvalue
                0x000005f2                main
                0x00000076                usartPutchar
 .text          0x0000079a        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
 .text          0x0000079a        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_clear_bss.o)
                0x0000079a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000079a        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
 .text.libgcc   0x0000079a        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_clear_bss.o)
                0x0000079a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000079a        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
                0x0000079a                exit
                0x0000079a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000079a        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
 *(.fini0)
                0x0000079e                _etext = .

.data           0x00800060        0x0 load address 0x0000079e
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 .data          0x00800060        0x0 testtiny.o
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0xd
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr25/crttn2313.o
 .bss           0x00800060        0x0 testtiny.o
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr25\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060        0xd testtiny.o
                0x00800060                scratch
                0x0080006c                flag
                0x0080006d                PROVIDE (__bss_end, .)
                0x0000079e                __data_load_start = LOADADDR (.data)
                0x0000079e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006d        0x0
                0x0080006d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006d                PROVIDE (__noinit_end, .)
                0x0080006d                _end = .
                0x0080006d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 testtiny.o

.debug_pubnames
                0x00000000       0xf6
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xf6 testtiny.o

.debug_info     0x00000000      0x5b4
 *(.debug_info)
 .debug_info    0x00000000      0x5b4 testtiny.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x298
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x298 testtiny.o

.debug_line     0x00000000      0xc7e
 *(.debug_line)
 .debug_line    0x00000000      0xc7e testtiny.o

.debug_frame    0x00000000       0xe0
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 testtiny.o

.debug_str      0x00000000      0x17d
 *(.debug_str)
 .debug_str     0x00000000      0x17d testtiny.o
                                0x1bc (size before relaxing)

.debug_loc      0x00000000      0x3aa
 *(.debug_loc)
 .debug_loc     0x00000000      0x3aa testtiny.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(testtiny.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x78
 .debug_ranges  0x00000000       0x78 testtiny.o
